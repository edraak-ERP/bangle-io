div.ProseMirror {
  & {
    /* Disable margin collapsing */
    display: flex;
    flex-direction: column;
  }

  & p:first-child,
  & h1:first-child,
  & h2:first-child,
  & h3:first-child,
  & h4:first-child,
  & h5:first-child,
  & h6:first-child {
    margin-top: 0;
  }

  & p:last-child,
  & h1:last-child,
  & h2:last-child,
  & h3:last-child,
  & h4:last-child,
  & h5:last-child,
  & h6:last-child {
    margin-bottom: 0;
  }

  & h1,
  & h2,
  & h3,
  & h4,
  & h5,
  & h6 {
    font-weight: 600;
    line-height: 1.25;
    padding-top: 0;
    padding-bottom: 0;
    border-style: none;
  }

  & a {
    text-decoration: underline;
    font-weight: 500;
  }

  & p,
  & ul,
  & ol,
  & pre {
    margin: 0;
    padding: 0.5rem 0;
    line-height: 1.5;
  }

  & blockquote {
    padding-left: 1em;
    border-left: 0.25em solid hsla(0, 0%, 60%, 0.4);
  }

  & h1 {
    margin: 1rem 0;
    font-size: 2.25em;
  }

  & h2 {
    margin: 1.75em 0 0.5em;
    font-size: 1.75em;
  }

  & h3 {
    margin: 1.5em 0 0.5em;
    font-size: 1.375em;
  }

  & h4 {
    margin: 1em 0;
    font-size: 1.125em;
  }

  & h5 {
    margin: 0.5em 0;
  }

  & h6 {
    opacity: 0.8;
  }

  & img,
  & video {
    margin: 0;
    width: min-content;
    max-width: 100%;
  }

  & code:not(pre code) {
    font-size: 0.9em;
    font-weight: 500;
    padding: 0.125em 0.25em;
    border-radius: 0.375rem;
    word-break: break-word;
    border: 1px solid hsl(var(--BV-border) / 0.6);
    background-color: hsl(var(--BV-accent) / 0.9);
    color: hsl(var(--BV-secondary-foreground));
  }

  & pre {
    margin: 0.5rem 0;
    padding: 1.2rem 1.2rem;
    overflow-x: auto;
    border-radius: 0.375rem;
  }

  & pre,
  & code {
    white-space: break-spaces;
    word-spacing: normal;
    word-break: normal;
    word-wrap: normal;
    tab-size: 4;
    hyphens: none;
    background-color: hsl(var(--BV-accent));
    color: hsl(var(--BV-accent-foreground));
  }

  & pre code {
    font-weight: inherit;
  }

  & hr {
    margin: 2em 0;
  }

  & .prosemirror-horizontal-rule {
    padding: 1em 0;
    margin: 1em 0;

    & hr {
      margin: 0;
    }
  }

  & .prosemirror-flat-list {
    line-height: 1.5;
    &::before,
    & > .list-marker {
      top: 0.5rem;
    }
    &:has(> div.list-content > h1) {
      &::before,
      & > .list-marker {
        top: 1em;
      }
    }
    &:has(> div.list-content > h2) {
      &::before,
      & > .list-marker {
        top: 0.6em;
      }
    }
    &:has(> div.list-content > h3) {
      &::before,
      & > .list-marker {
        top: 0.25em;
      }
    }
    &:has(> div.list-content > h4) {
      &::before,
      & > .list-marker {
        top: 0;
      }
    }
    &:has(> div.list-content > h5) {
      &::before,
      & > .list-marker {
        top: -0.1em;
      }
    }
    &:has(> div.list-content > h6) {
      &::before,
      & > .list-marker {
        top: -0.1em;
      }
    }
  }

  .ProseMirror-selectednode {
    z-index: calc(infinity);
    outline: 2px solid hsl(var(--BV-pop));
    outline-offset: 1px;
    border-radius: 0.375rem;
  }

  /*
     Don't generate box for node view wrapper. This make it easier to style
     the node views.
     */
  div[data-node-view-root="true"] {
    display: contents;
  }
}

.prosemirror-flat-list {
  & {
    padding: 0;
    margin-top: 0;
    margin-bottom: 0;
    margin-left: 32px;
    position: relative;
    display: list-item;
    list-style: none;
  }

  &.ProseMirror-selectednode {
    outline: none;

    &:after {
      content: "";
      position: absolute;
      left: -32px;
      right: -2px;
      top: -2px;
      bottom: -2px;
      border: 2px solid #8cf;
      pointer-events: none;
    }
  }

  &[data-list-kind="bullet"] {
    list-style: disc;
  }

  &[data-list-kind="ordered"] {
    /*
    Ensure that the counters in children don't escape, so that the sub lists
    won't affect the counter of the parent list.

    See also https://github.com/ocavue/prosemirror-flat-list/issues/23
    */
    & > * {
      contain: style;
    }

    &::before {
      position: absolute;
      right: 100%;
      font-variant-numeric: tabular-nums;
      content: counter(prosemirror-flat-list-counter, decimal) ". ";
    }

    counter-increment: prosemirror-flat-list-counter;

    /* 
    Reset the counter for the first list node in the sequence.
    */
    &:first-child,
    :not(&) + & {
      counter-reset: prosemirror-flat-list-counter;

      /* 
      If the first list node has a custom order number, set the counter to that value.
      */
      &[data-list-order] {
        @supports (counter-set: prosemirror-flat-list-counter 1) {
          counter-set: prosemirror-flat-list-counter
            var(--prosemirror-flat-list-order);
        }

        /* 
        Safari older than version 17.2 doesn't support `counter-set` 
        */
        @supports not (counter-set: prosemirror-flat-list-counter 1) {
          counter-increment: prosemirror-flat-list-counter
            var(--prosemirror-flat-list-order);
        }
      }
    }
  }

  &[data-list-kind="task"] {
    & > .list-marker {
      position: absolute;
      right: 100%;
      text-align: center;
      width: 1lh;

      &,
      & * {
        cursor: pointer;
      }
    }
  }

  &[data-list-kind="toggle"] {
    & > .list-marker {
      position: absolute;
      right: 100%;
      text-align: center;
      width: 1lh;
    }

    & > .list-marker::before {
      content: "\23F7"; /* Black Medium Down-Pointing Triangle */
    }
    &[data-list-collapsable][data-list-collapsed] > .list-marker::before {
      content: "\23F5"; /* Black Medium Right-Pointing Triangle */
    }

    &[data-list-collapsable] > .list-marker {
      cursor: pointer;
    }
    &:not([data-list-collapsable]) > .list-marker {
      opacity: 40%;
      pointer-events: none;
    }

    /* If collapsed, hide the second and futher children */
    &[data-list-collapsable][data-list-collapsed]
      > .list-content
      > *:nth-child(n + 2) {
      display: none;
    }
  }
}
